<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Managerment.dao.BreakRuleMapper" >
  <resultMap id="BaseResultMap" type="com.Managerment.pojo.BreakRule" >
    <id column="break_rule_id" property="breakRuleId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    break_rule_id, student_id, student_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from break_rule
    where break_rule_id = #{breakRuleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from break_rule
    where break_rule_id = #{breakRuleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Managerment.pojo.BreakRule" >
    insert into break_rule (break_rule_id, student_id, student_name
      )
    values (#{breakRuleId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Managerment.pojo.BreakRule" >
    insert into break_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="breakRuleId != null" >
        break_rule_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="breakRuleId != null" >
        #{breakRuleId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Managerment.pojo.BreakRule" >
    update break_rule
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
    </set>
    where break_rule_id = #{breakRuleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Managerment.pojo.BreakRule" >
    update break_rule
    set student_id = #{studentId,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR}
    where break_rule_id = #{breakRuleId,jdbcType=INTEGER}
  </update>
  <select id="getBreakRuleList" resultType="com.Managerment.pojo.BreakRule">
    SELECT *
    FROM break_rule
  </select>
  <select id="findBreakRuleByPage" parameterType="java.lang.Integer" resultType="com.Managerment.pojo.BreakRule">
    select * from break_rule limit 5 offset #{offset}
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(*) from break_rule
  </select>
</mapper>